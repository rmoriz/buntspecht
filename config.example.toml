# Buntspecht Configuration
# Copy this file to config.toml and adjust the values

# Fediverse/Mastodon Accounts
# You can configure multiple accounts and providers can post to one or multiple accounts

[[accounts]]
name = "main-account"
type = "mastodon"  # Optional: account type (default: mastodon)
instance = "https://mastodon.social"
accessToken = "your-main-account-token-here"
# defaultVisibility = "unlisted"  # Optional: public, unlisted, private, direct (default: unlisted)

[[accounts]]
name = "backup-account"
type = "mastodon"  # Optional: account type (default: mastodon)
instance = "https://fosstodon.org"
accessToken = "your-backup-account-token-here"
# defaultVisibility = "public"  # Optional: public, unlisted, private, direct (default: unlisted)

# Optional: Additional accounts
# [[accounts]]
# name = "work-account"
# type = "mastodon"  # Optional: account type (default: mastodon)
# instance = "https://your-company-instance.com"
# accessToken = "your-work-token-here"

[bot]
# Multi-Provider Configuration
# Each provider can have its own schedule and configuration
# Each provider can post to one or multiple accounts

# Provider 1: Hourly ping messages (to both accounts)
[[bot.providers]]
name = "hourly-ping"
type = "ping"
cronSchedule = "0 * * * *"  # Every hour
enabled = true
accounts = ["main-account", "backup-account"]  # Posts to both accounts
# visibility = "unlisted"  # Optional: public, unlisted, private, direct (default: unlisted)

[bot.providers.config]
message = "Hourly ping from Buntspecht!"

# Provider 2: Daily system statistics (only to main account, disabled)
[[bot.providers]]
name = "daily-stats"
type = "command"
cronSchedule = "0 9 * * *"  # Every day at 9:00 AM
enabled = false
accounts = ["main-account"]  # Only to main account

[bot.providers.config]
command = "uptime"
timeout = 10000

# Provider 3: GitHub repository updates (only to backup account, disabled)
[[bot.providers]]
name = "github-stats"
type = "jsoncommand"
cronSchedule = "0 */6 * * *"  # Every 6 hours
enabled = false
accounts = ["backup-account"]  # Only to backup account

[bot.providers.config]
command = "curl -s 'https://api.github.com/repos/octocat/Hello-World' | jq '{name: .name, stars: .stargazers_count, forks: .forks_count, language: .language}'"
template = "Repository {{name}} ({{language}}): {{stars}} stars and {{forks}} forks"
timeout = 15000

[logging]
# Log level: debug, info, warn, error
level = "info"

[telemetry]
# OpenTelemetry configuration for monitoring and observability
# IMPORTANT: Telemetry only works with 'bun run' or 'npm start', NOT with single binaries!
# Single binaries (buntspecht-linux-x64, etc.) have OpenTelemetry dependencies excluded.
# For telemetry use Docker or run the bot directly with Bun/Node.js.
enabled = false  # Enable/disable telemetry
serviceName = "buntspecht"
serviceVersion = "0.5.1"

[telemetry.jaeger]
# Jaeger for distributed tracing
enabled = false
endpoint = "http://localhost:14268/api/traces"

[telemetry.prometheus]
# Prometheus for metrics
enabled = false
port = 9090
endpoint = "/metrics"

[telemetry.tracing]
# Enable/disable tracing
enabled = false

[telemetry.metrics]
# Enable/disable metrics
enabled = false

# Notes:
# - Each provider runs independently with its own schedule
# - Providers can be individually enabled/disabled with 'enabled = true/false'
# - Different provider types can be mixed
# - Each provider can have its own environment variables
# - Errors in one provider do not affect others
#
# Cron schedule examples:
# "0 * * * *"       = every hour
# "*/30 * * * *"    = every 30 minutes  
# "0 9 * * *"       = every day at 9:00 AM
# "0 9 * * 1"       = every Monday at 9:00 AM
# "0 */6 * * *"     = every 6 hours
# "0 9,17 * * 1-5"  = Mon-Fri at 9:00 AM and 5:00 PM
#
# Provider types:
#
# 1. ping Provider:
#    type = "ping"
#    [config]
#    message = "Your message here"
#
# 2. command Provider:
#    type = "command"
#    [config]
#    command = "date '+Today is %A, %B %d, %Y at %H:%M UTC'"
#    timeout = 30000  # Optional: timeout in milliseconds
#    cwd = "/path/to/working/directory"  # Optional: working directory
#    maxBuffer = 1048576  # Optional: maximum buffer size
#    [config.env]  # Optional: environment variables
#    MY_VAR = "value"
#
# 3. jsoncommand Provider:
#    type = "jsoncommand"
#    [config]
#    command = "curl -s 'https://api.example.com/data' | jq '{name: .name, count: .count}'"
#    template = "Statistics: {{name}} has {{count}} entries"
#    timeout = 30000  # Optional: timeout in milliseconds
#    cwd = "/path/to/working/directory"  # Optional: working directory
#    maxBuffer = 1048576  # Optional: maximum buffer size
#    [config.env]  # Optional: environment variables
#    API_KEY = "your-key"
#
# 4. push Provider:
#    type = "push"
#    # No cronSchedule needed - triggered externally
#    visibility = "unlisted"  # Optional: public, unlisted, private, direct (default: unlisted)
#    [config]
#    defaultMessage = "Push notification from Buntspecht"
#    allowExternalMessages = true  # Optional: allow custom messages (default: true)
#    maxMessageLength = 500  # Optional: max message length (default: 500)
#    defaultVisibility = "private"  # Optional: provider-specific default visibility
#
# Visibility Priority (highest to lowest):
# 1. Webhook request visibility parameter
# 2. Push provider config defaultVisibility
# 3. Provider visibility setting
# 4. Account defaultVisibility
# 5. Global default (unlisted)