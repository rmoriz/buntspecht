# Buntspecht Webhook Integration Configuration Example
# Copy this file to config.toml and adjust the values

# Fediverse/Mastodon Accounts
[[accounts]]
name = "main-account"
type = "mastodon"  # Optional: account type (default: mastodon)
instance = "https://mastodon.social"
accessToken = "your-main-account-token-here"
defaultVisibility = "unlisted"  # Default visibility for this account

[[accounts]]
name = "alerts-account"
type = "mastodon"  # Optional: account type (default: mastodon)
instance = "https://fosstodon.org"
accessToken = "your-alerts-account-token-here"
defaultVisibility = "public"  # Public alerts for better visibility

[bot]
# Push providers for webhook integration

# Provider 1: General alerts (uses global webhook secret)
[[bot.providers]]
name = "webhook-alerts"
type = "push"
enabled = true
accounts = ["alerts-account"]

[bot.providers.config]
defaultMessage = "Alert from external system"
allowExternalMessages = true
maxMessageLength = 500

# Provider 2: System notifications (uses provider-specific secret)
[[bot.providers]]
name = "system-notifications"
type = "push"
enabled = true
accounts = ["main-account"]

[bot.providers.config]
defaultMessage = "System notification"
allowExternalMessages = true
maxMessageLength = 280
# Provider-specific authentication (overrides global settings)
webhookSecret = "system-specific-secret-123"  # Simple secret for this provider
# OR use HMAC for this provider:
# hmacSecret = "system-hmac-secret-123"
# hmacAlgorithm = "sha256"  # Optional: defaults to global or sha256
# hmacHeader = "X-Hub-Signature-256"  # Optional: defaults to global or X-Hub-Signature-256
rateLimitMessages = 3  # Allow 3 messages per 5 minutes
rateLimitWindowSeconds = 300

# Provider 3: CI/CD notifications (uses provider-specific secret)
[[bot.providers]]
name = "cicd-notifications"
type = "push"
enabled = true
accounts = ["main-account", "alerts-account"]

[bot.providers.config]
defaultMessage = "CI/CD Pipeline Update"
allowExternalMessages = true
maxMessageLength = 400
webhookSecret = "cicd-webhook-secret-456"

# Provider 4: Monitoring alerts (high priority, uses provider-specific secret)
[[bot.providers]]
name = "monitoring-critical"
type = "push"
enabled = true
accounts = ["alerts-account"]
visibility = "public"  # Critical alerts should be public for maximum visibility

[bot.providers.config]
defaultMessage = "CRITICAL: Monitoring Alert"
allowExternalMessages = true
maxMessageLength = 500
webhookSecret = "monitoring-secret-789"
defaultVisibility = "public"  # Provider-specific default visibility

[webhook]
# Webhook server configuration
enabled = true
port = 3000
host = "0.0.0.0"  # Listen on all interfaces
path = "/webhook"  # Webhook endpoint path

# Security settings (all optional - choose one authentication method)
# Option 1: Simple secret authentication (legacy method)
secret = "global-webhook-secret-here"  # Optional: Global webhook secret (recommended for security)

# Option 2: HMAC signature authentication (recommended for better security)
hmacSecret = "global-hmac-secret-here"  # Optional: Global HMAC secret
hmacAlgorithm = "sha256"  # Optional: HMAC algorithm (sha1, sha256, sha512) - default: sha256
hmacHeader = "X-Hub-Signature-256"  # Optional: HMAC header name - default: X-Hub-Signature-256

# IP whitelist (optional)
allowedIPs = [  # Optional: IP whitelist (remove for no restrictions)
  "127.0.0.1",
  "::1",
  "192.168.1.0/24",
  "10.0.0.0/8"
]

# Performance settings
maxPayloadSize = 1048576  # 1MB max payload size
timeout = 30000  # 30 seconds timeout

[logging]
level = "info"

[telemetry]
# OpenTelemetry configuration for monitoring and observability
# IMPORTANT: Telemetry only works with 'bun run' or 'npm start', NOT with single binaries!
# Single binaries (buntspecht-linux-x64, etc.) have OpenTelemetry dependencies excluded.
# For telemetry use Docker or run the bot directly with Bun/Node.js.
enabled = false
serviceName = "buntspecht"
serviceVersion = "0.13.0"

[telemetry.jaeger]
enabled = false
endpoint = "http://localhost:14268/api/traces"

[telemetry.prometheus]
enabled = false
port = 9090
endpoint = "/metrics"

[telemetry.tracing]
enabled = false

[telemetry.metrics]
enabled = false

# Webhook Usage Examples:
#
# 1. Basic webhook call using global simple secret (for webhook-alerts provider):
# curl -X POST http://localhost:3000/webhook \
#   -H "Content-Type: application/json" \
#   -H "X-Webhook-Secret: global-webhook-secret-here" \
#   -d '{"provider": "webhook-alerts"}'
#
# 2. Webhook call using global HMAC authentication:
# payload='{"provider": "webhook-alerts", "message": "Test message"}'
# signature=$(echo -n "$payload" | openssl dgst -sha256 -hmac "global-hmac-secret-here" | sed 's/^.* //')
# curl -X POST http://localhost:3000/webhook \
#   -H "Content-Type: application/json" \
#   -H "X-Hub-Signature-256: sha256=$signature" \
#   -d "$payload"
#
# 3. Webhook call using provider-specific secret (for system-notifications):
# curl -X POST http://localhost:3000/webhook \
#   -H "Content-Type: application/json" \
#   -H "X-Webhook-Secret: system-specific-secret-123" \
#   -d '{"provider": "system-notifications", "message": "Deployment completed successfully!"}'
#
# 3. Webhook call using provider-specific secret (for cicd-notifications):
# curl -X POST http://localhost:3000/webhook \
#   -H "Content-Type: application/json" \
#   -H "X-Webhook-Secret: cicd-webhook-secret-456" \
#   -d '{
#     "provider": "cicd-notifications",
#     "message": "Build #123 completed",
#     "metadata": {
#       "build_id": "123",
#       "status": "success",
#       "branch": "main"
#     }
#   }'
#
# 4. Webhook call using provider-specific secret (for monitoring-critical):
# curl -X POST http://localhost:3000/webhook \
#   -H "Content-Type: application/json" \
#   -H "X-Webhook-Secret: monitoring-secret-789" \
#   -d '{
#     "provider": "monitoring-critical",
#     "message": "CRITICAL: CPU usage > 90% on server-01"
#   }'
#
# 5. Webhook call with custom visibility:
# curl -X POST http://localhost:3000/webhook \
#   -H "Content-Type: application/json" \
#   -H "X-Webhook-Secret: global-webhook-secret-here" \
#   -d '{
#     "provider": "webhook-alerts",
#     "message": "Private maintenance notification",
#     "visibility": "private"
#   }'
#
# 6. Webhook call with direct message visibility:
# curl -X POST http://localhost:3000/webhook \
#   -H "Content-Type: application/json" \
#   -H "X-Webhook-Secret: system-specific-secret-123" \
#   -d '{
#     "provider": "system-notifications",
#     "message": "Direct notification for admin",
#     "visibility": "direct"
#   }'
#
# Authentication Methods:
#
# 1. Simple Secret Authentication (X-Webhook-Secret header):
# - Legacy method using a shared secret in the X-Webhook-Secret header
# - Each provider can have its own webhookSecret that overrides global settings
# - If no authentication is configured, requests are allowed (optional security)
#
# 2. HMAC Signature Authentication (recommended):
# - More secure method using HMAC signatures
# - Supports sha1, sha256 (default), and sha512 algorithms
# - Each provider can have its own HMAC settings that override global settings
# - Default header: X-Hub-Signature-256 (GitHub/GitLab style)
# - Signature format: "algorithm=hexdigest" (e.g., "sha256=abc123...")
#
# Provider-Specific Authentication:
# - Each push provider can have its own authentication settings
# - Provider settings override global webhook settings
# - Allows different systems to use different authentication methods
# - Better security isolation and easier secret rotation
#
# Security Benefits:
# - HMAC prevents replay attacks and tampering
# - Different external systems can use different secrets/methods
# - Compromised secret only affects one provider, not all
# - Easier to rotate secrets for specific integrations
# - Better audit trail for webhook sources
#
# Visibility Configuration:
# Visibility determines who can see the posted messages:
# - "public": Visible to everyone, appears in public timelines
# - "unlisted": Visible to everyone but doesn't appear in public timelines
# - "private": Only visible to followers (followers-only)
# - "direct": Only visible to mentioned users (direct message)
#
# Visibility Priority (highest to lowest):
# 1. Webhook request "visibility" parameter
# 2. Push provider config "defaultVisibility"
# 3. Provider "visibility" setting
# 4. Account "defaultVisibility"
# 5. Global default (unlisted)
#
# Security Notes:
# - Always use HTTPS in production
# - Set strong webhook secrets (both global and provider-specific)
# - Use IP whitelisting when possible
# - Consider rate limiting at the reverse proxy level
# - Monitor webhook logs for suspicious activity
# - Rotate secrets regularly