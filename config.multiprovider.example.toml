# Buntspecht Multi-Provider Konfiguration Beispiel
# Kopiere diese Datei zu config.toml und passe die Werte an

# Fediverse/Mastodon Accounts
[[accounts]]
name = "personal"
instance = "https://mastodon.social"
accessToken = "dein-persoenlicher-token"

[[accounts]]
name = "work"
instance = "https://fosstodon.org"
accessToken = "dein-arbeits-token"

[[accounts]]
name = "bot"
instance = "https://botsin.space"
accessToken = "dein-bot-token"

[bot]
# Multi-Provider Konfiguration
# Jeder Provider kann einen eigenen Zeitplan und eigene Konfiguration haben

# Provider 1: St√ºndliche Ping-Nachrichten (an alle Accounts)
[[bot.providers]]
name = "hourly-ping"
type = "ping"
cronSchedule = "0 * * * *"  # Jede Stunde
enabled = true
accounts = ["personal", "work", "bot"]  # An alle drei Accounts

[bot.providers.config]
message = "ü§ñ St√ºndlicher Ping von Buntspecht!"

# Provider 2: T√§gliche Systemstatistiken (nur an Work-Account)
[[bot.providers]]
name = "daily-stats"
type = "command"
cronSchedule = "0 9 * * *"  # Jeden Tag um 9:00 Uhr
enabled = true
accounts = ["work"]  # Nur an Work-Account

[bot.providers.config]
command = "uptime"
timeout = 10000

# Provider 3: GitHub Repository-Updates (an Personal und Bot Account)
[[bot.providers]]
name = "github-stats"
type = "jsoncommand"
cronSchedule = "0 */6 * * *"  # Alle 6 Stunden
enabled = true
accounts = ["personal", "bot"]  # An Personal und Bot Account

[bot.providers.config]
command = "curl -s 'https://api.github.com/repos/octocat/Hello-World' | jq '{name: .name, stars: .stargazers_count, forks: .forks_count, language: .language}'"
template = "üìä Repository {{name}} ({{language}}): {{stars}} ‚≠ê und {{forks}} üç¥"
timeout = 15000

# Provider 4: W√∂chentliche Zusammenfassung (nur an Personal Account, deaktiviert)
[[bot.providers]]
name = "weekly-summary"
type = "ping"
cronSchedule = "0 10 * * 1"  # Jeden Montag um 10:00 Uhr
enabled = false  # Deaktiviert
accounts = ["personal"]  # Nur an Personal Account

[bot.providers.config]
message = "üìÖ W√∂chentliche Zusammenfassung: Eine neue Woche beginnt!"

# Provider 5: Wetter-Updates (nur an Bot Account)
[[bot.providers]]
name = "weather-updates"
type = "jsoncommand"
cronSchedule = "0 */3 * * *"  # Alle 3 Stunden
enabled = true
accounts = ["bot"]  # Nur an Bot Account

[bot.providers.config]
# Beispiel mit OpenWeatherMap API (API-Key erforderlich)
command = "curl -s 'https://api.openweathermap.org/data/2.5/weather?q=Berlin&appid=DEIN_API_SCHLUESSEL&units=metric' | jq '{temp: .main.temp, desc: .weather[0].description, city: .name, humidity: .main.humidity}'"
template = "üå§Ô∏è Wetter in {{city}}: {{temp}}¬∞C, {{desc}} (Luftfeuchtigkeit: {{humidity}}%)"
timeout = 10000

[bot.providers.config.env]
API_KEY = "dein-openweathermap-api-schluessel"

[logging]
# Protokoll-Stufe: debug, info, warn, error
level = "info"

[telemetry]
# OpenTelemetry Konfiguration fuer Monitoring und Observability
# WICHTIG: Telemetrie funktioniert nur mit 'bun run' oder 'npm start', NICHT mit Single Binaries!
# Single Binaries (buntspecht-linux-x64, etc.) haben OpenTelemetry-Dependencies ausgeschlossen.
# Fuer Telemetrie verwende Docker oder fuehre den Bot direkt mit Bun/Node.js aus.
enabled = false  # Telemetrie aktivieren/deaktivieren
serviceName = "buntspecht"
serviceVersion = "0.2.0"

[telemetry.jaeger]
# Jaeger fuer Distributed Tracing
enabled = false
endpoint = "http://localhost:14268/api/traces"

[telemetry.prometheus]
# Prometheus fuer Metriken
enabled = false
port = 9090
endpoint = "/metrics"

[telemetry.tracing]
# Tracing aktivieren/deaktivieren
enabled = false

[telemetry.metrics]
# Metriken aktivieren/deaktivieren
enabled = false

# Hinweise:
# - Jeder Provider l√§uft unabh√§ngig mit seinem eigenen Zeitplan
# - Provider k√∂nnen einzeln aktiviert/deaktiviert werden mit 'enabled = true/false'
# - Verschiedene Provider-Typen k√∂nnen gemischt werden
# - Jeder Provider kann eigene Umgebungsvariablen haben
# - Bei Fehlern in einem Provider werden die anderen nicht beeintr√§chtigt
#
# Cron-Schedule Beispiele:
# "0 * * * *"       = jede Stunde
# "*/30 * * * *"    = alle 30 Minuten  
# "0 9 * * *"       = jeden Tag um 9:00 Uhr
# "0 9 * * 1"       = jeden Montag um 9:00 Uhr
# "0 */6 * * *"     = alle 6 Stunden
# "0 9,17 * * 1-5"  = Mo-Fr um 9:00 und 17:00 Uhr